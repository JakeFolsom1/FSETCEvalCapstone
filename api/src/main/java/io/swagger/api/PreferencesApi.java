/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.*;
import io.swagger.model.Preference;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-10-25T16:55:34.601Z")

@Api(value = "preferences", description = "the preferences API")
public interface PreferencesApi {

    @ApiOperation(value = "Create a user preference", nickname = "createPreference", notes = "", tags={ "preferences", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully created"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/preferences",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> createPreference(@ApiParam(value = "Preference object that needs to be created in the database" ,required=true )  @Valid @RequestBody Preference body);


    @ApiOperation(value = "Delete a user preference by preference ID", nickname = "deletePreference", notes = "", tags={ "preferences", })
    @ApiResponses(value = {
        @ApiResponse(code = 404, message = "User not found"),
        @ApiResponse(code = 405, message = "Preference number not found") })
    @RequestMapping(value = "/preferences/{asurite}/{preferenceNumber}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deletePreference(@ApiParam(value = "",required=true) @PathVariable("asurite") String asurite,
                                          @ApiParam(value = "",required=true) @PathVariable("preferenceNumber") Long preferenceNumber);


    @ApiOperation(value = "Get all preferences for the current semester", nickname = "getAllPreferences", notes = "", response = Preference.class, responseContainer = "List", tags={ "preferences", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = Preference.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid asurite supplied"),
        @ApiResponse(code = 404, message = "User not found") })
    @RequestMapping(value = "/preferences",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Preference>> getAllPreferences();


    @ApiOperation(value = "Get the preferences by asurite for current semester", nickname = "getPreferences", notes = "", response = Preference.class, responseContainer = "List", tags={ "preferences", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = Preference.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid asurite supplied"),
        @ApiResponse(code = 404, message = "User not found") })
    @RequestMapping(value = "/preferences/{asurite}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Preference>> getPreferences(@ApiParam(value = "asurite of user",required=true) @PathVariable("asurite") String asurite);


    @ApiOperation(value = "Update an existing preference", nickname = "updatePreference", notes = "", tags={ "preferences", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid asurite supplied"),
        @ApiResponse(code = 404, message = "User not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/preferences",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updatePreference(@ApiParam(value = "Preference object that needs to be updated in the database" ,required=true )  @Valid @RequestBody Preference body);

}
