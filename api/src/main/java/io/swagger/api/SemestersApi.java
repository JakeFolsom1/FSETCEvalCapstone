/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Semester;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-10-25T16:55:34.601Z")

@Api(value = "semesters", description = "the semesters API")
public interface SemestersApi {

    @ApiOperation(value = "Create a new semester", nickname = "createSemester", notes = "", tags={ "semesters", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successfully created"),
        @ApiResponse(code = 409, message = "Semester already exists")})
    @RequestMapping(value = "/semesters",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> createSemester(@ApiParam(value = "Semester object that needs to be created in the database" ,required=true )  @Valid @RequestBody Semester body);


    @ApiOperation(value = "Delete a semester by semesterName", nickname = "deleteSemester", notes = "", tags={ "semesters", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully deleted"),
        @ApiResponse(code = 404, message = "Semester not found")})
    @RequestMapping(value = "/semesters/{semesterName}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteSemester(@ApiParam(value = "name of the semester to delete from the database",required=true) @PathVariable("semesterName") String semesterName);


    @ApiOperation(value = "Get the name of the active semester", nickname = "getActiveSemester", notes = "", response = String.class, tags={ "semesters", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = String.class) })
    @RequestMapping(value = "/semesters/active",
        produces = { "application/text" },
        method = RequestMethod.GET)
    ResponseEntity<String> getActiveSemester();


    @ApiOperation(value = "Get all semesters", nickname = "getAllSemesters", notes = "", response = Semester.class, responseContainer = "List", tags={ "semesters", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = Semester.class, responseContainer = "List") })
    @RequestMapping(value = "/semesters",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Semester>> getAllSemesters();


    @ApiOperation(value = "Set a semester as active by semesterName", nickname = "setActiveSemester", notes = "All other semesters will be marked as inactive", tags={ "semesters", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully updated"),
        @ApiResponse(code = 404, message = "Semester not found") })
    @RequestMapping(value = "/semesters/{semesterName}",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Void> setActiveSemester(@ApiParam(value = "name of the semester to set as active",required=true) @PathVariable("semesterName") String semesterName);

}
