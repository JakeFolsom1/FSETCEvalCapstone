/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.*;
import io.swagger.model.Staff;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-10-25T16:55:34.601Z")

@Api(value = "Staff", description = "the staff API")
public interface StaffApi {

    @ApiOperation(value = "Get a staff by asurite", nickname = "getStaff", notes = "", response = Staff.class, tags={ "staff", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = Staff.class),
        @ApiResponse(code = 404, message = "Staff member not found") })
    @RequestMapping(value = "/staff/{asurite}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Staff> getStaff(@ApiParam(value = "",required=true) @PathVariable("asurite") String asurite);

    @ApiOperation(value = "Get a majorCluster of a staff by asurite", nickname = "getMajorCluster", notes = "", response = String.class, tags={ "staff", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Success", response = String.class),
            @ApiResponse(code = 404, message = "User not found") })
    @RequestMapping(value = "/staff/major/{asurite}",
            produces = { "application/text" },
            method = RequestMethod.GET)
    ResponseEntity<String> getMajorCluster(@ApiParam(value = "",required=true) @PathVariable("asurite") String asurite);


    @ApiOperation(value = "Get all active staff", nickname = "getAllActiveStaff", notes = "", response = Staff.class, responseContainer = "List", tags={ "staff", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = Staff.class, responseContainer = "List") })
    @RequestMapping(value = "/staff",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Staff>> getAllActiveStaff();

    @ApiOperation(value = "Get all active tutor staff", nickname = "getAllActiveTutors", notes = "", response = Staff.class, responseContainer = "List", tags={ "staff", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Success", response = Staff.class, responseContainer = "List") })
    @RequestMapping(value = "/staff/tutors",
            produces = { "application/json" },
            method = RequestMethod.GET)
    ResponseEntity<List<Staff>> getAllActiveTutors();

    @ApiOperation(value = "Get all active lead staff", nickname = "getAllActiveLeads", notes = "", response = Staff.class, responseContainer = "List", tags={ "staff", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Success", response = Staff.class, responseContainer = "List") })
    @RequestMapping(value = "/staff/leads",
            produces = { "application/json" },
            method = RequestMethod.GET)
    ResponseEntity<List<Staff>> getAllActiveLeads();

    @ApiOperation(value = "Get all active tutor staff by major cluster", nickname = "getAllActiveTutorsByMajorCluster", notes = "", response = Staff.class, responseContainer = "List", tags={ "staff", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Success", response = Staff.class, responseContainer = "List") })
    @RequestMapping(value = "/staff/tutors/{majorCluster}",
            produces = { "application/json" },
            method = RequestMethod.GET)
    ResponseEntity<List<Staff>> getAllActiveTutorsByMajorCluster(@ApiParam(value = "",required=true) @PathVariable("majorCluster") String majorCluster);


    @ApiOperation(value = "Get a asurite to name dictionary", nickname = "getNames", notes = "", response = Map.class, tags={ "staff", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Success", response = Map.class) })
    @RequestMapping(value = "/staff/names",
            produces = { "application/json" },
            method = RequestMethod.GET)
    ResponseEntity<Map<String, String>> getNames();

}
